!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self)["vue-data-anchor"]=t()}(this,(function(){"use strict";class e{constructor(e,t){this.options={},this.unWatchs={},this.vm=e,this.pluginOptions=t||{},this.register(this.vm.$options.anchor)}register(e=[]){e.map((e=>this.getDefaultOption(e))).forEach((e=>{this.unregister(e.key),this.options[e.key]=e,this.restore(e.key),this.update(e.key),this.unWatchs[e.key]=[this.vm.$watch(e.key,(()=>this.update(e.key)),{deep:!0}),this.vm.$watch(`$route.query.${e.name}`,(()=>this.restore(e.key)),{deep:!0})]}))}unregister(e){return!!this.unWatchs[e]&&(this.unWatchs[e].forEach((e=>e())),delete this.unWatchs[e],delete this.options[e],!0)}update(e){const t=this.options[e];if(!t)throw`[vue-data-anchor]: The '${e}' is not registered, please register first.`;const s=this.getValue(e),r=this.pack(s),i=this.vm.$route.query[t.name];if(r===i)return;let n=!0;if(t.updateCheck){if(n=t.updateCheck.call(this.vm,e,s),null===n)return}else if(this.pluginOptions.updateCheck&&(n=this.pluginOptions.updateCheck.call(this.vm,e,s),null===n))return;if(n){if(r!==this.pack("function"==typeof t.defaults?t.defaults.call(this.vm,e):t.defaults)){const e=Object.assign(Object.assign({},this.vm.$route.query),{[t.name]:r});this.vm.$router.replace({query:e})}else if(i){const e=Object.assign({},this.vm.$route.query);delete e[t.name],this.vm.$router.replace({query:e})}}else if(i){const e=Object.assign({},this.vm.$route.query);delete e[t.name],this.vm.$router.replace({query:e})}}restore(e){const t=this.options[e],s=this.vm.$route.query[t.name];if(s){const r=this.unpack(s);t.restore&&t.restore.call(this.vm,e,r)}}pack(e){const t=typeof e;switch(t){case"string":return"s"+encodeURI(e);case"number":return"0"+encodeURI(e);case"bigint":return"i"+encodeURI(e);case"boolean":return e?"t":"f";case"undefined":return"-";case"object":return null===e?"u":"*"+encodeURI(JSON.stringify(e));default:throw`[vue-data-anchor]: The value of type "${t}" are not supported.`}}unpack(e){if(void 0===e)return;if("string"!=typeof e){if(!e[0])throw"[vue-data-anchor]: Could not restore value correctly.";e=e[0]}const t=e[0],s=decodeURI(e.slice(1));switch(t){case"s":return s;case"0":return Number(s);case"i":return BigInt(s);case"t":return!0;case"f":return!1;case"-":return;case"u":return null;case"*":return JSON.parse(s);default:throw"[vue-data-anchor]: Could not restore value correctly. The url may have changed."}}getDefaultOption(e){let t;return t="string"==typeof e?{key:e}:e,t.defaults||(t.defaults=this.getValue(t.key)),t.name||(t.name=t.key),t.restore||(t.restore=this.pluginOptions.restore||this.setValue),t}getValue(e){let t=this.vm.$data;return e.split(".").forEach((e=>{t=t[e]})),t}setValue(e,t){let s,r=this.$data,i=e;e.split(".").forEach((e=>{s=r,r=r[e],i=e})),this.$set(s,i,t)}}return{install(t,s){t.mixin({created(){this.$anchor=new e(this,s)}})}}}));
